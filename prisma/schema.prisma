// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Subject {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  teachers Teacher[]
  bookings Booking[]
}

model Teacher {
  id        Int       @id @default(autoincrement())
  name      String
  email     String?
  subjectId Int
  subject   Subject   @relation(fields: [subjectId], references: [id])
  bookings  Booking[]
  calendarEvents CalendarEvent[] 
}

model Student {
  id       Int      @id @default(autoincrement())
  name     String
  email    String   @unique
  phone    String?
  bookings Booking[]
}

model Booking {
  id         Int            @id @default(autoincrement())
  studentId  Int
  teacherId  Int
  subjectId  Int

  // The user picks which day (date) plus the timeslot
  date       DateTime
  timeslot   String         // e.g. "18:00 - 19:00"

  status     BookingStatus  @default(PENDING)
  createdAt  DateTime       @default(now())

  student  Student @relation(fields: [studentId], references: [id])
  teacher  Teacher @relation(fields: [teacherId], references: [id])
  subject  Subject @relation(fields: [subjectId], references: [id])
}

model CalendarEvent {
  id            Int    @id @default(autoincrement())
  teacherId     Int
  date          DateTime
  timeslot      String
  googleEventId String

  teacher       Teacher @relation(fields: [teacherId], references: [id])

  @@unique([teacherId, date, timeslot], name: "unique_event_per_slot")
  
}


enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELED
}
